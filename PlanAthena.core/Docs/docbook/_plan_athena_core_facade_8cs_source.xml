<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__plan_athena_core_facade_8cs_source" xml:lang="en-US">
<title>PlanAthenaCoreFacade.cs</title>
<indexterm><primary>Facade/PlanAthenaCoreFacade.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__plan_athena_core_facade_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;PlanAthena.Core.Facade.PlanAthenaCoreFacade.cs</emphasis>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Threading.Tasks;
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_plan_athena_1_1_core_1_1_application_1_1_interfaces">PlanAthena.Core.Application.Interfaces</link>;
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_plan_athena_1_1_core_1_1_facade_1_1_dto_1_1_input">PlanAthena.Core.Facade.Dto.Input</link>;
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_plan_athena_1_1_core_1_1_facade_1_1_dto_1_1_output">PlanAthena.Core.Facade.Dto.Output</link>;
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;&#32;<emphasis role="comment">//&#32;Pour&#32;IServiceProvider</emphasis>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00008"/>00008 
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00009"/>00009 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_plan_athena_1_1_core_1_1_facade">PlanAthena.Core.Facade</link>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00010"/>00010 {
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00011"/><link linkend="_class_plan_athena_1_1_core_1_1_facade_1_1_plan_athena_core_facade">00011</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_plan_athena_1_1_core_1_1_facade_1_1_plan_athena_core_facade_1a129a0aa5b1c48d21fd5f79a999c54a0b">PlanAthenaCoreFacade</link>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;IServiceProvider&#32;_serviceProvider;
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00014"/>00014 
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Le&#32;constructeur&#32;prend&#32;IServiceProvider&#32;pour&#32;pouvoir&#32;résoudre&#32;le&#32;UseCase.</emphasis>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;L&apos;application&#32;appelante&#32;(PlanAthena)&#32;sera&#32;responsable&#32;de&#32;configurer</emphasis>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;et&#32;de&#32;fournir&#32;ce&#32;IServiceProvider.</emphasis>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00018"/><link linkend="_class_plan_athena_1_1_core_1_1_facade_1_1_plan_athena_core_facade_1a129a0aa5b1c48d21fd5f79a999c54a0b">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_plan_athena_1_1_core_1_1_facade_1_1_plan_athena_core_facade_1a129a0aa5b1c48d21fd5f79a999c54a0b">PlanAthenaCoreFacade</link>(IServiceProvider&#32;serviceProvider)
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_serviceProvider&#32;=&#32;serviceProvider&#32;??&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException(nameof(serviceProvider));
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00022"/>00022 
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00026"/><link linkend="_class_plan_athena_1_1_core_1_1_facade_1_1_plan_athena_core_facade_1ace93e754cb90a954204d712c3ede88fb">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&lt;ChantierSetupAnalysisResultDto&gt;&#32;<link linkend="_class_plan_athena_1_1_core_1_1_facade_1_1_plan_athena_core_facade_1ace93e754cb90a954204d712c3ede88fb">InitializeAndAnalyzeChantierAsync</link>(
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_plan_athena_1_1_core_1_1_facade_1_1_dto_1_1_input_1aa28aa6f3847c63941514c75931fabaf3">ChantierSetupInputDto</link>&#32;inputDto)
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(inputDto&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException(nameof(inputDto));
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00031"/>00031 
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Utilisation&#32;du&#32;scope&#32;pour&#32;résoudre&#32;les&#32;services.&#32;C&apos;est&#32;une&#32;bonne&#32;pratique.</emphasis>
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;scope&#32;=&#32;_serviceProvider.CreateScope())
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;useCase&#32;=&#32;scope.ServiceProvider.GetRequiredService&lt;<link linkend="_interface_plan_athena_1_1_core_1_1_application_1_1_interfaces_1_1_i_initialize_and_analyze_chantier_use_case">IInitializeAndAnalyzeChantierUseCase</link>&gt;();
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;await&#32;useCase.<link linkend="_interface_plan_athena_1_1_core_1_1_application_1_1_interfaces_1_1_i_initialize_and_analyze_chantier_use_case_1aef3df0bdc0357ed3f0b518a97b504a9d">ExecuteAsync</link>(inputDto);
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="__plan_athena_core_facade_8cs_source_1l00040"/>00040 }
</programlisting></section>
