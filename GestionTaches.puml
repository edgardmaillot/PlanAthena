@startuml
' --- Configuration pour un diagramme plus joli ---
skinparam componentStyle uml2
skinparam linetype ortho
skinparam ranksep 80
skinparam nodesep 80
skinparam minlen 2
skinparam package {
  borderColor #555555
  borderThickness 2
}
skinparam class {
  borderColor #DD4814
  backgroundColor #FFF0E6
  arrowColor #BF360C
  shadowing false
}
title Architecture de la fonctionnalité "Gestion des Tâches"

' =======================================================
' ===      COUCHE UI - La vue "Gestion des Tâches"    ===
' =======================================================
package "Gestion des Tâches (UI)" {

  class TacheForm {
    - _dependanceBuilder : DependanceBuilder
    --
    + btnMappingAuto_Click()
    + btnImporter_Click()
    + PertControl_TacheDoubleClicked()
  }

  class TacheDetailForm {
    + ChargerTache(tache, modeCreation)
    + btnSauvegarder_Click()
  }

  class PertDiagramControl {
    + ChargerDonnees(taches, filtre)
    + event TacheSelected
    + event TacheDoubleClicked
  }
}

' ================================================
' ===   LIBRAIRIE EXTERNE                      ===
' ================================================
package "Librairies Externes" {
  class "Microsoft.Msagl" as MSAGL_LIB {
    + Render()
  }
}

' ================================================
' ===      SERVICES (Logique Métier)           ===
' ================================================
package "Services & Utilitaires" {
  class TacheService {
    + ObtenirToutesLesTaches()
    + ChargerTaches(taches)
  }
  
  class MetierService {
    + GetAllMetiers()
    + GetPrerequisForMetier(metierId)
  }

  ' Le chef d'orchestre du processus de mapping
  class DependanceBuilder {
    + ConstruireDependancesLogiques()
    --
    - CreerEtLierJalonsDeSynchro()
    - SimplifierDependancesTransitives() ' <--- La méthode clé !
  }

  ' L'expert en dépendances inter-métiers
  class TopologieDependanceService {
    + AppliquerDependancesInterMetiers()
  }
}

' ================================================
' ===            RELATIONS / FLUX              ===
' ================================================

' --- Composition & Dépendances UI ---
TacheForm *-- "1" PertDiagramControl
TacheForm *-- "1" TacheDetailForm
TacheForm --> TacheService
TacheForm --> MetierService
TacheDetailForm --> TacheService
TacheDetailForm --> MetierService
PertDiagramControl ..> MSAGL_LIB

' --- Le flux de la logique de mapping ---
TacheForm --> DependanceBuilder : "déclenche le processus"
DependanceBuilder --> TopologieDependanceService : "utilise"

' --- Communication par Événements ---
PertDiagramControl .> TacheForm
TacheDetailForm .> TacheForm

@enduml