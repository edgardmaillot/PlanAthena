@startuml
' --- Configuration FORC√âE pour layout vertical ---
!define DIRECTION top to bottom direction
top to bottom direction
skinparam minClassWidth 120
skinparam maxMessageSize 200
skinparam packageStyle rectangle
skinparam linetype ortho
skinparam ranksep 60
skinparam nodesep 40

skinparam package {
  borderColor #555555
  borderThickness 2
  fontColor #333333
  backgroundColor #F8F9FA
}
skinparam class {
  borderColor #007ACC
  backgroundColor #DDEEFF
  arrowColor #005588
  shadowing false
}
title Architecture G√©n√©rale de l'Application PlanAthena(v0.3.3)

' ================================================
' ===         NIVEAU 1 : COUCHE UI             ===
' ================================================
package "üñ•Ô∏è COUCHE UI (Pr√©sentation)" as UI {
  class MainForm {
    +AfficherProjets()
    +G√©rerNavigation()
  }
  class TacheForm {
    +AfficherDiagramme()
    +G√©rerImports()
  }
  class TacheDetailForm {
    +ChargerD√©pendances()
    +G√©rerSuggestions()
  }
  class LotForm {
    +G√©rerLots()
  }
  class BlocForm {
    +G√©rerBlocs()
  }
}

' ================================================
' ===      NIVEAU 2 : COUCHE ORCHESTRATION     ===
' ================================================
package "üéØ COUCHE ORCHESTRATION (Services M√©tier)" as ORCHESTRATION {
  class ProjetService {
    +ImporterTachesCSV()
    +SauvegarderProjet()
    +ChargerProjet()
  }
  class PlanificationService {
    +ExecuterPlanification()
    +OptimiserRessources()
  }
}

' ================================================
' ===      NIVEAU 3 : COUCHE SERVICES          ===
' ================================================
package "‚öôÔ∏è COUCHE SERVICES (Donn√©es)" as SERVICES {
  class TacheService {
    +CreerTache()
    +ModifierTache()
    +ObtenirTaches()
  }
  class LotService {
    +G√©rerLots()
  }
  class BlocService {
    +G√©rerBlocs()
  }
  class MetierService {
    +ObtenirPr√©requis()
  }
  class OuvrierService {
    +G√©rerOuvriers()
  }
  class ImportService {
    +ProcessImportFile()
    +ParseFormat()
  }
}

' ================================================
' ===    NIVEAU 4 : COUCHE TRAITEMENT          ===
' ================================================
package "üîß COUCHE TRAITEMENT (Algorithmes)" as PROCESSING {
  class DependanceCore {
    +ConstruireGraphe()
    +CalculerSuccesseurs()
    +FiltrerCandidats()
  }
  
  class DependanceBuilder {
    +ObtenirSuggestions()
    +Classifier√âtats()
  }
  
  class MappingAutoService {
    +MappingAutomatique()
    +PlacerJalons()
    +ValiderCoh√©rence()
  }
  
  class PreparationSolveurService {
    +Pr√©parerDonn√©es()
  }
  
  class DataTransformer {
    +TransformerDonn√©es()
  }
}

' ================================================
' ===       NIVEAU 5 : COUCHE DONN√âES          ===
' ================================================
package "üìä COUCHE DONN√âES (Mod√®les)" as DATA {
  class Tache {
    +TacheId : string
    +Dependencies : string
    +ExclusionsDependances : string
  }
  
  class Lot {
    +LotId : string
    +Nom : string
  }
  
  class Bloc {
    +BlocId : string
    +CapaciteMax : int
  }
  
  class Metier {
    +MetierId : string
    +PrerequisIds : string
  }
  
  class Ouvrier {
    +OuvrierId : string
    +Specialites : string
  }
  
  ' --- DTOs ---
  class ProjetData <<DTO>>
  class ImportResult <<DTO>>
  class MappingResult <<DTO>>
  class DependanceAffichage <<DTO>>
}

' ================================================
' ===    NIVEAU 6 : COUCHE INFRASTRUCTURE      ===
' ================================================
package "üèóÔ∏è INFRASTRUCTURE (Externe)" as INFRA {
  class JsonSerializer <<library>>
  class FileSystem <<library>>
  class QuikGraph <<library>>
}

' ================================================
' ===         RELATIONS VERTICALES             ===
' ================================================

' Niveau 1 ‚Üí Niveau 2
UI -down-> ORCHESTRATION

' Niveau 2 ‚Üí Niveau 3  
ORCHESTRATION -down-> SERVICES

' Niveau 3 ‚Üí Niveau 4
SERVICES -down-> PROCESSING

' Niveau 4 ‚Üí Niveau 5
PROCESSING -down-> DATA

' Niveau 5 ‚Üí Niveau 6
DATA -down-> INFRA

' ================================================
' ===       RELATIONS D√âTAILL√âES               ===
' ================================================

' UI vers Orchestration
MainForm -down-> ProjetService
TacheForm -down-> ProjetService
TacheDetailForm -down-> DependanceBuilder

' Orchestration vers Services
ProjetService -down-> ImportService
ProjetService -down-> TacheService
ProjetService -down-> LotService
ProjetService -down-> BlocService
PlanificationService -down-> TacheService
PlanificationService -down-> OuvrierService

' Services vers Processing
ImportService -down-> MappingAutoService
TacheService -down-> DependanceBuilder
DependanceBuilder -down-> DependanceCore
MappingAutoService -down-> DependanceCore

' Processing vers Data
DependanceCore -down-> Metier
MappingAutoService -down-> MappingResult
DependanceBuilder -down-> DependanceAffichage

' Services vers Data
TacheService -down-> Tache
LotService -down-> Lot
BlocService -down-> Bloc
MetierService -down-> Metier
OuvrierService -down-> Ouvrier

' Data vers Infrastructure
ProjetData -down-> JsonSerializer
ImportResult -down-> FileSystem
DependanceCore -down-> QuikGraph

' ================================================
' ===            NOTES EXPLICATIVES            ===
' ================================================
note top of UI
  <b>NIVEAU 1 - PR√âSENTATION</b>
  Interface utilisateur WinForms
  Gestion des interactions et affichage
end note

note top of ORCHESTRATION
  <b>NIVEAU 2 - ORCHESTRATION</b>
  Services de haut niveau
  Coordination des workflows m√©tier
end note

note top of SERVICES
  <b>NIVEAU 3 - SERVICES DONN√âES</b>
  Gestion CRUD des entit√©s m√©tier
  Logique de validation et persistance
end note

note top of PROCESSING
  <b>NIVEAU 4 - ALGORITHMES</b>
  Services de traitement sp√©cialis√©s
  Algorithmes et logique complexe
end note

note top of DATA
  <b>NIVEAU 5 - MOD√àLES</b>
  Entit√©s m√©tier et DTOs
  Structure des donn√©es
end note

note top of INFRA
  <b>NIVEAU 6 - INFRASTRUCTURE</b>
  Biblioth√®ques externes
  Acc√®s fichiers et s√©rialisation
end note

@enduml