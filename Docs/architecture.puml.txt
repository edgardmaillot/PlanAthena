@startuml
' --- Configuration pour une meilleure visibilité ---
top to bottom direction
skinparam componentStyle uml2
skinparam linetype polyline
skinparam ranksep 80
skinparam nodesep 80


skinparam package {
  borderColor #555555
  borderThickness 2
  fontColor #333333
}
skinparam class {
  borderColor #007ACC
  backgroundColor #DDEEFF
  arrowColor #005588
  shadowing false
}
title Architecture Générale de l'Application (v0.2.2)

' ================================================
' ===              COUCHE UI (Forms)           ===
' ================================================
package "Couche UI (Forms)" {
  class MainForm
  class TacheForm
  class LotForm <<(N,orchid) NOUVEAU>>
  class BlocForm <<(N,orchid) NOUVEAU>>
}

' ================================================
' ===      COUCHE SERVICE (Logique Métier)     ===
' ================================================
package "Couche Service (Logique Métier)" {
  ' --- Les orchestrateurs de haut niveau ---
  class ProjetService
  class PlanificationService
  
  ' --- Les gardiens des données de base ---
  class TacheService
  class OuvrierService
  class MetierService
  class LotService <<(N,orchid) NOUVEAU>>
  class BlocService <<(N,orchid) NOUVEAU>>
}

' ================================================
' ===  SERVICES DE TRAITEMENT / PROCESSING     ===
' ================================================
package "Services de Traitement / Processing" {
    class PreparationSolveurService
    class DataTransformer
    class DependanceBuilder
}

' ================================================
' ===    MODÈLES DU DOMAINE (Les données)      ===
' ================================================
package "Modèles de Données" {
    class ProjetData <<DTO>>
    class Tache <<MODIFIÉ>>
    class Ouvrier
    class Metier
    class Lot <<(N,orchid) NOUVEAU>>
    class Bloc <<(N,orchid) NOUVEAU>>
}

' ================================================
' === COUCHE INFRASTRUCTURE (Accès externe)    ===
' ================================================
package "Infrastructure" {
  class "System.Text.Json" as JsonSerializer <<library>>
  class "System.IO" as FileSystem <<library>>
}

' ================================================
' ===            RELATIONS / FLUX              ===
' ================================================
' --- L'UI utilise les services ---
MainForm --> ProjetService
MainForm --> PlanificationService
TacheForm --> LotService
TacheForm --> BlocService
LotForm --> LotService
BlocForm --> BlocService

' --- Le Pipeline de Planification ---
PlanificationService --> PreparationSolveurService
PlanificationService --> DataTransformer
PlanificationService --> TacheService
PlanificationService --> OuvrierService
PlanificationService --> MetierService

' --- Services de traitement ---
DataTransformer --> LotService
DataTransformer --> BlocService
DependanceBuilder --> LotService
DependanceBuilder --> BlocService
PreparationSolveurService --> LotService
PreparationSolveurService --> BlocService

' --- Orchestrateur ProjetService ---
ProjetService --> TacheService
ProjetService --> OuvrierService
ProjetService --> MetierService
ProjetService --> LotService
ProjetService --> BlocService
ProjetService ..> ProjetData : "crée/lit"
ProjetService ..> JsonSerializer
ProjetService ..> FileSystem

' --- Les services gèrent leurs modèles de données ---
TacheService "1" o-- "*" Tache : "gère"
OuvrierService "1" o-- "*" Ouvrier : "gère"
MetierService "1" o-- "*" Metier : "gère"
LotService "1" o-- "*" Lot : "gère"
BlocService "1" o-- "*" Bloc : "gère"

@enduml