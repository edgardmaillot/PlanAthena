@startuml
' --- Configuration Globale ---
!define DIRECTION top to bottom direction
top to bottom direction
skinparam minClassWidth 180
skinparam maxMessageSize 200
skinparam packageStyle rectangle
skinparam linetype ortho
skinparam ranksep 100
skinparam nodesep 50

skinparam package {
  borderColor #555555
  borderThickness 2
  fontColor #333333
  backgroundColor #F8F9FA
}
skinparam class {
  borderColor #007ACC
  backgroundColor #DDEEFF
  arrowColor #005588
  shadowing false
  stereoBorderColor #0056B3
  stereoFontColor #0056B3
}
skinparam note {
  backgroundColor #FFFACD
  borderColor #DAA520
}

title Architecture G√©n√©rale de PlanAthena (D√©taill√©e par Couche)

' ====================================================================================================
' === COUCHE 1 : PR√âSENTATION (UI)                                                                 ===
' ====================================================================================================
package "üñ•Ô∏è Couche 1: Pr√©sentation (UI)" as UI {
  namespace Forms {
    class MainForm {
      +NouveauProjet_Click()
      +ChargerProjet_Click()
      +btnGenerateAndTest_Click()
      +btnExportGantt_Click()
    }
    class TacheForm {
      +RafraichirVueComplete()
      +btnImporter_Click()
      +PertControl_TacheDoubleClicked()
    }
    class TacheDetailForm {
      +ChargerTache()
      +ChargerListeDependances()
      +btnSauvegarder_Click()
    }
    class LotForm {
      +SetEditingMode()
      +btnModifier_Click()
    }
    class BlocForm {
      +SetEditingMode()
      +btnModifier_Click()
    }
    class OuvrierForm {
      +RafraichirAffichage()
      +btnAjouterCompetence_Click()
    }
    class MetierForm {
      +RafraichirAffichageComplet()
      +btnAjouterPrerequis_Click()
    }
  }
  namespace Controls {
    class PertDiagramControl {
      +Initialize()
      +ChargerDonnees()
      +ZoomToutAjuster()
      +TogglePan()
    }
  }
  namespace Controls.Config {
    class PertNodeBuilder {
      +BuildNodeFromTache()
      +ApplyNodeStyle()
    }
  }
}

' ====================================================================================================
' === COUCHE 2 : APPLICATION (Orchestration & Workflows)                                           ===
' ====================================================================================================
package "üéØ Couche 2: Application (Orchestration & Workflows)" as APPLICATION {
  namespace Services.Business {
    class ProjetService {
      +SauvegarderProjet()
      +ChargerProjet()
      +ValiderDonneesAvantPlanification()
      +CreerNouveauProjet()
    }
    class PlanificationService {
      +ChargerDonnees()
      +LancerPlanificationAsync()
      +ObtenirStatistiquesTraitement()
    }
  }
  class ImportOrchestrationService {
    +ImporterTachesDepuisCsv()
  }
}

' ====================================================================================================
' === COUCHE 3 : SERVICES DU DOMAINE (Logique M√©tier)                                              ===
' ====================================================================================================
package "‚öôÔ∏è Couche 3: Services du Domaine" as DOMAIN_SERVICES {
  namespace Services.Business {
    class TacheService {
      +AjouterTache()
      +ModifierTache()
      +ObtenirToutesLesTaches()
      +SupprimerTache()
    }
    class LotService {
      +AjouterLot()
      +ModifierLot()
      +ObtenirTousLesLots()
    }
    class BlocService {
      +AjouterBloc()
      +ModifierBloc()
      +ObtenirTousLesBlocs()
    }
    class MetierService {
      +AjouterMetier()
      +ModifierMetier()
      +GetPrerequisForMetier()
      +ObtenirMetiersTriesParDependance()
      +GetDisplayColorForMetier()
    }
    class OuvrierService {
      +AjouterOuvrier()
      +ModifierOuvrier()
      +SupprimerCompetence()
      +ObtenirTousLesOuvriers()
    }
  }
}

' ====================================================================================================
' === COUCHE 4 : UTILITAIRES D'APPLICATION (Traitement de Donn√©es & Aides)                         ===
' ====================================================================================================
package "üîß Couche 4: Utilitaires d'Application" as APP_UTILITIES {
  namespace Services.Processing {
    class DataTransformer {
      +TransformToChantierSetupDto()
    }
    class PreparationSolveurService {
      +PreparerPourSolveur()
    }
    class ResultatConsolidationService {
      +ConsoliderPourGantt()
    }
  }
  namespace Utilities {
    class DependanceBuilder {
      +ObtenirDependancesPourTache()
      -AppliquerSuggestionsMetier()
      -ConstruireGrapheBloc()
    }
    class ConfigurationBuilder {
      +ConstruireDepuisUI()
      +ConstruireConfigExportGantt()
    }
  }
}

' ====================================================================================================
' === COUCHE 5 : INFRASTRUCTURE (Acc√®s aux Donn√©es & Services G√©n√©riques)                          ===
' ====================================================================================================
package "üèóÔ∏è Couche 5: Infrastructure" as INFRASTRUCTURE {
  namespace Services.DataAccess {
    class CsvDataService {
      +ImportCsv()
      +ExportCsv()
    }
    class ExcelReader {
      +ImportExcel()
      +ImportSapOuvriers()
    }
    class GanttExportService {
      +ExporterVersGanttProjectXml()
      +GenererXmlGanttProjectConsolide()
    }
    class IdGeneratorService {
      +GenererProchainTacheId()
      +ExtraireLotId()
    }
    class ImportService {
      +ImporterTachesCSV()
      -ViderLot()
      -ImporterDonnees()
    }
  }
}

' ====================================================================================================
' === COUCHE 6 : MOD√àLES DU DOMAINE & DTOs                                                         ===
' ====================================================================================================
package "üìä Couche 6: Mod√®les du Domaine (Entit√©s & DTOs)" as DOMAIN_MODELS {
  namespace Data {
    class Tache {
      +TacheId : string
      +Dependencies : string
      +ExclusionsDependances : string
      +Type : TypeActivite
      +EstJalon : bool
    }
    class Lot {
      +LotId : string
      +Nom : string
      +Priorite : int
    }
    class Bloc {
      +BlocId : string
      +Nom : string
      +CapaciteMaxOuvriers : int
    }
    class Metier {
      +MetierId : string
      +Nom : string
      +PrerequisMetierIds : string
      +CouleurHex : string
    }
    class Ouvrier {
      +OuvrierId : string
      +Nom : string
      +MetierId : string
      +NiveauExpertise : NiveauExpertise
    }
    class ProjetData <<DTO>>
    enum TypeActivite
  }
  namespace Services.Business {
    class InformationsProjet <<DTO>>
    class PlanificationResultDto <<DTO>>
  }
  namespace Services.Processing {
    class PreparationResult <<DTO>>
    class ConsolidatedGanttDto <<DTO>>
  }
  namespace Services.DataAccess {
    class ImportResult <<DTO>>
    class ConfigurationUI <<DTO>>
    class ConfigurationExportGantt <<DTO>>
  }
  namespace Utilities {
    class DependanceAffichage <<DTO>>
    enum EtatDependance
  }
}

' ====================================================================================================
' === COUCHE 7 : D√âPENDANCES EXTERNES                                                              ===
' ====================================================================================================
package "üåç Couche 7: D√©pendances Externes" as EXTERNAL {
  namespace PlanAthena.Core.Facade {
    class PlanAthenaCoreFacade <<Interface>>

  }
  namespace PlanAthena.Core.Facade.Dto.Input {
    class ChantierSetupInputDto <<DTO>>
    class TacheDto <<DTO>>
  }
  namespace PlanAthena.Core.Facade.Dto.Output {
    class ProcessChantierResultDto <<DTO>>
    class AffectationDto <<DTO>>
  }
  class QuikGraph <<Biblioth√®que>>
  class CsvHelper <<Biblioth√®que>>
  class Microsoft.Msagl <<Biblioth√®que>>
  class System.Text.Json <<Biblioth√®que>>
}

' ====================================================================================================
' === RELATIONS ENTRE LES COUCHES (Flux principal)                                                 ===
' ====================================================================================================

UI -down-> APPLICATION : Appels de haut niveau (Planification, Projet, Import)
APPLICATION -down-> DOMAIN_SERVICES : Services m√©tier fondamentaux
DOMAIN_SERVICES -down-> APP_UTILITIES : Logique utilitaire pour le domaine
APP_UTILITIES -down-> INFRASTRUCTURE : Services techniques et I/O
INFRASTRUCTURE -down-> DOMAIN_MODELS : Mod√®les de donn√©es manipul√©s/√©chang√©s
DOMAIN_MODELS -down-> EXTERNAL : Objets et structures de donn√©es li√©s aux libs externes

' ====================================================================================================
' === RELATIONS D√âTAILL√âES (Exemples cl√©s de d√©pendances entre classes)                             ===
' ====================================================================================================

' --- UI vers Application ---
UI.Forms.MainForm --> APPLICATION.Services.Business.ProjetService
UI.Forms.MainForm --> APPLICATION.Services.Business.PlanificationService
UI.Forms.TacheForm --> ImportOrchestrationService
UI.Forms.MainForm --> APPLICATION.ImportOrchestrationService

' --- UI vers Services du Domaine (pour la gestion directe des entit√©s) ---
UI.Forms.TacheForm --> DOMAIN_SERVICES.Services.Business.TacheService
UI.Forms.TacheForm --> DOMAIN_SERVICES.Services.Business.MetierService
UI.Forms.TacheForm --> DOMAIN_SERVICES.Services.Business.LotService
UI.Forms.TacheForm --> DOMAIN_SERVICES.Services.Business.BlocService
UI.Forms.TacheDetailForm --> DOMAIN_SERVICES.Services.Business.TacheService
UI.Forms.TacheDetailForm --> DOMAIN_SERVICES.Services.Business.MetierService
UI.Forms.TacheDetailForm --> DOMAIN_SERVICES.Services.Business.LotService
UI.Forms.TacheDetailForm --> DOMAIN_SERVICES.Services.Business.BlocService
UI.Forms.LotForm --> DOMAIN_SERVICES.Services.Business.LotService
UI.Forms.LotForm --> DOMAIN_SERVICES.Services.Business.TacheService
UI.Forms.BlocForm --> DOMAIN_SERVICES.Services.Business.BlocService
UI.Forms.BlocForm --> DOMAIN_SERVICES.Services.Business.TacheService
UI.Forms.OuvrierForm --> DOMAIN_SERVICES.Services.Business.OuvrierService
UI.Forms.OuvrierForm --> DOMAIN_SERVICES.Services.Business.MetierService
UI.Forms.MetierForm --> DOMAIN_SERVICES.Services.Business.MetierService

' --- UI vers Utilitaires d'Application ---
UI.Forms.TacheDetailForm --> APP_UTILITIES.Utilities.DependanceBuilder
UI.Forms.MainForm --> APP_UTILITIES.Utilities.ConfigurationBuilder
UI.Controls.PertDiagramControl --> APP_UTILITIES.Utilities.DependanceBuilder
UI.Controls.PertDiagramControl --> UI.Controls.Config.PertNodeBuilder
UI.Controls.Config.PertNodeBuilder --> DOMAIN_SERVICES.Services.Business.MetierService


' --- Application vers Services du Domaine ---
APPLICATION.Services.Business.ProjetService --> DOMAIN_SERVICES.Services.Business.OuvrierService
APPLICATION.Services.Business.ProjetService --> DOMAIN_SERVICES.Services.Business.TacheService
APPLICATION.Services.Business.ProjetService --> DOMAIN_SERVICES.Services.Business.MetierService
APPLICATION.Services.Business.ProjetService --> DOMAIN_SERVICES.Services.Business.LotService
APPLICATION.Services.Business.ProjetService --> DOMAIN_SERVICES.Services.Business.BlocService

APPLICATION.Services.Business.PlanificationService --> DOMAIN_SERVICES.Services.Business.OuvrierService
APPLICATION.Services.Business.PlanificationService --> DOMAIN_SERVICES.Services.Business.TacheService
APPLICATION.Services.Business.PlanificationService --> DOMAIN_SERVICES.Services.Business.MetierService

' --- Application vers Utilitaires d'Application ---
APPLICATION.Services.Business.PlanificationService --> APP_UTILITIES.Services.Processing.DataTransformer
APPLICATION.Services.Business.PlanificationService --> APP_UTILITIES.Services.Processing.PreparationSolveurService
APPLICATION.Services.Business.PlanificationService --> APP_UTILITIES.Services.Processing.ResultatConsolidationService

' --- Application vers Infrastructure ---
APPLICATION.Services.Business.ProjetService --> INFRASTRUCTURE.Services.DataAccess.CsvDataService
APPLICATION.Services.Business.ProjetService --> INFRASTRUCTURE.Services.DataAccess.GanttExportService 
' Note: GanttExportService est appel√© par MainForm, pas directement ProjetService pour l'export Gantt final

' --- ImportOrchestrationService vers Infrastructure ---
ImportOrchestrationService --> INFRASTRUCTURE.Services.DataAccess.ImportService

' --- Services du Domaine vers Mod√®les du Domaine ---
DOMAIN_SERVICES.Services.Business.TacheService --> DOMAIN_MODELS.Data.Tache
DOMAIN_SERVICES.Services.Business.LotService --> DOMAIN_MODELS.Data.Lot
DOMAIN_SERVICES.Services.Business.BlocService --> DOMAIN_MODELS.Data.Bloc
DOMAIN_SERVICES.Services.Business.MetierService --> DOMAIN_MODELS.Data.Metier
DOMAIN_SERVICES.Services.Business.OuvrierService --> DOMAIN_MODELS.Data.Ouvrier

' --- Services du Domaine vers Infrastructure ---
DOMAIN_SERVICES.Services.Business.OuvrierService --> INFRASTRUCTURE.Services.DataAccess.CsvDataService
DOMAIN_SERVICES.Services.Business.OuvrierService --> INFRASTRUCTURE.Services.DataAccess.ExcelReader
DOMAIN_SERVICES.Services.Business.TacheService --> INFRASTRUCTURE.Services.DataAccess.IdGeneratorService

' --- Utilitaires d'Application vers Services du Domaine ---
APP_UTILITIES.Utilities.DependanceBuilder --> DOMAIN_SERVICES.Services.Business.TacheService
APP_UTILITIES.Utilities.DependanceBuilder --> DOMAIN_SERVICES.Services.Business.MetierService
APP_UTILITIES.Services.Processing.DataTransformer --> DOMAIN_SERVICES.Services.Business.LotService
APP_UTILITIES.Services.Processing.DataTransformer --> DOMAIN_SERVICES.Services.Business.BlocService

' --- Utilitaires d'Application vers Mod√®les du Domaine ---
APP_UTILITIES.Services.Processing.DataTransformer --> DOMAIN_MODELS.Data.Tache
APP_UTILITIES.Services.Processing.PreparationSolveurService --> DOMAIN_MODELS.Data.Tache
APP_UTILITIES.Services.Processing.PreparationSolveurService --> DOMAIN_MODELS.Services.Processing.PreparationResult
APP_UTILITIES.Services.Processing.ResultatConsolidationService --> DOMAIN_MODELS.Data.Tache
APP_UTILITIES.Services.Processing.ResultatConsolidationService --> DOMAIN_MODELS.Services.Processing.ConsolidatedGanttDto
APP_UTILITIES.Utilities.DependanceBuilder --> DOMAIN_MODELS.Data.Tache
APP_UTILITIES.Utilities.DependanceBuilder --> DOMAIN_MODELS.Utilities.DependanceAffichage
APP_UTILITIES.Utilities.ConfigurationBuilder --> DOMAIN_MODELS.Services.DataAccess.ConfigurationUI
APP_UTILITIES.Utilities.ConfigurationBuilder --> DOMAIN_MODELS.Services.DataAccess.ConfigurationExportGantt

' --- Infrastructure vers Mod√®les du Domaine ---
INFRASTRUCTURE.Services.DataAccess.CsvDataService --> DOMAIN_MODELS.Data.Metier
INFRASTRUCTURE.Services.DataAccess.CsvDataService --> DOMAIN_MODELS.Data.Ouvrier
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_MODELS.Services.DataAccess.ImportResult
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_MODELS.Data.Tache
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_MODELS.Data.Lot
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_MODELS.Data.Bloc
INFRASTRUCTURE.Services.DataAccess.GanttExportService --> DOMAIN_MODELS.Services.Processing.ConsolidatedGanttDto

' --- Infrastructure vers Services du Domaine (pour "peupler" les donn√©es) ---
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_SERVICES.Services.Business.TacheService
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_SERVICES.Services.Business.LotService
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_SERVICES.Services.Business.BlocService
INFRASTRUCTURE.Services.DataAccess.ImportService --> DOMAIN_SERVICES.Services.Business.MetierService
INFRASTRUCTURE.Services.DataAccess.IdGeneratorService --> DOMAIN_SERVICES.Services.Business.TacheService
INFRASTRUCTURE.Services.DataAccess.IdGeneratorService --> DOMAIN_SERVICES.Services.Business.LotService
INFRASTRUCTURE.Services.DataAccess.IdGeneratorService --> DOMAIN_SERVICES.Services.Business.BlocService


' --- Relations vers les D√©pendances Externes ---
APPLICATION.Services.Business.PlanificationService --> PlanAthena.Core.Facade.PlanAthenaCoreFacade

APP_UTILITIES.Services.Processing.DataTransformer --> PlanAthena.Core.Facade.Dto.Input.ChantierSetupInputDto
APP_UTILITIES.Services.Processing.ResultatConsolidationService --> PlanAthena.Core.Facade.Dto.Output.ProcessChantierResultDto
APP_UTILITIES.Utilities.DependanceBuilder --> QuikGraph

INFRASTRUCTURE.Services.DataAccess.CsvDataService --> CsvHelper
INFRASTRUCTURE.Services.DataAccess.GanttExportService --> Microsoft.Msagl
APPLICATION.Services.Business.ProjetService --> System.Text.Json 
' Utilis√© pour la s√©rialisation/d√©s√©rialisation du projet

' Relations sp√©cifiques √† PlanAthena.Core (DTOs)
PlanAthena.Core.Facade.PlanAthenaCoreFacade .right.> PlanAthena.Core.Facade.Dto.Input.ChantierSetupInputDto
PlanAthena.Core.Facade.PlanAthenaCoreFacade <.right. PlanAthena.Core.Facade.Dto.Output.ProcessChantierResultDto

PlanAthena.Core.Facade.Dto.Input.ChantierSetupInputDto -right-> PlanAthena.Core.Facade.Dto.Input.TacheDto
PlanAthena.Core.Facade.Dto.Output.ProcessChantierResultDto -right-> PlanAthena.Core.Facade.Dto.Output.AffectationDto

DOMAIN_MODELS.Data.Tache -down-> EXTERNAL.PlanAthena.Core.Facade.Dto.Enums.TypeActivite
DOMAIN_MODELS.Data.Ouvrier -down-> EXTERNAL.PlanAthena.Core.Facade.Dto.Enums.NiveauExpertise



    note top of EXTERNAL
      Contrat pour le moteur d'optimisation
    end note
@enduml