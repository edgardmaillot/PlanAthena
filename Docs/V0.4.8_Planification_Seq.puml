@startuml
' --- Configuration ---
title Diagramme de Séquence Cible : Lancement de la Planification
skinparam componentStyle uml2
skinparam wrapWidth 250
skinparam participantPadding 5
skinparam sequenceMessageAlign center
' --- Participants ---
actor Utilisateur
participant "PlanificatorView" as UI
participant "PlanificationOrchestrator" as Orchestrator
participant "DLL (Facade)" as Facade
participant "PlanningConsolidationService" as Consolidator
participant "PlanningService\n(Source de Vérité)" as PlanningSvc
participant "TaskManagerService\n(Source de Vérité)" as StatusSvc
participant "AnalysisService" as AnalysisSvc
' --- Flux ---
Utilisateur -> UI : Clique "Lancer Planification"
activate UI
UI -> Orchestrator : ExecuteAsync(config)
activate Orchestrator
Orchestrator -> Facade : ProcessChantierAsync(...)
activate Facade
Facade --> Orchestrator : rawResult
deactivate Facade
Orchestrator -> Consolidator : Process(rawResult, config)
activate Consolidator
Consolidator --> Orchestrator : consolidatedPlanning
deactivate Consolidator
Orchestrator -> PlanningSvc : UpdatePlanning(consolidatedPlanning)
activate PlanningSvc
PlanningSvc --> Orchestrator
deactivate PlanningSvc
Orchestrator -> StatusSvc : ResetAllTasksStatusToPlanned()
activate StatusSvc
StatusSvc --> Orchestrator
deactivate StatusSvc
Orchestrator -> AnalysisSvc : GenerateReport(consolidatedPlanning, ...)
activate AnalysisSvc
AnalysisSvc --> Orchestrator : analysisReport
deactivate AnalysisSvc
Orchestrator --> UI : runResult { rawResult, analysisReport }
deactivate Orchestrator
UI -> UI : Affiche les KPIs depuis 'analysisReport'
UI -> UI : Active les boutons d'export
deactivate UI
@enduml