@startuml
' --- Configuration ---
skinparam componentStyle uml2
skinparam linetype ortho
skinparam ranksep 80
skinparam nodesep 100

title Architecture Globale de PlanAthena.core

package "Facade" <<Layer>> {
  class PlanAthenaCoreFacade {
    + ProcessChantierAsync(...)
  }
}
note left: Point d'entrée unique\npour les clients de la DLL.

package "Application" <<Layer>> {
    package "UseCases" {
        class ProcessChantierUseCase {
          + ExecuteAsync(...)
        }
    }
    
    package "Interfaces" {
        interface IProcessChantierUseCase
        interface IChantierSetupInputMapper
        interface IConstructeurProblemeOrTools
        interface ISolutionInterpreterService
        ' ... et autres interfaces de services
    }
    
    package "Services" {
        class ChantierSetupInputMapper
        class ChantierValidationService
        ' ...
    }
    
    package "Validation" {
        class ChantierSetupInputDtoValidator
    }
}
note top: Orchestre les actions.\nDéfinit les contrats (interfaces)\nentre les couches.

package "Domain" <<Layer>> {
    class Chantier
    class Tache
    class Ouvrier
    class Metier
    class "ValueObjects" as VOs
}
note bottom: Le cœur du métier.\nContient la logique et les\nrègles métier pures.\nNe dépend de rien.

package "Infrastructure" <<Layer>> {
    package "Services.OrTools" {
        class ConstructeurProblemeOrTools
        class TacheModelBuilder
        class CoutModelBuilder
        class SolutionInterpreterService
    }
    package "Services" {
        class CalendrierService
    }
}
note right: Implémentations "techniques".\nCommunication avec les\nlibrairies externes (OR-Tools).\nDépend des interfaces de l'Application.

package "Bibliothèques Externes" {
    class "Google.OrTools.Sat" as OrTools
    class "FluentValidation" as FluentVal
}


' --- Dépendances ---
PlanAthenaCoreFacade --> IProcessChantierUseCase

ProcessChantierUseCase --> IChantierSetupInputMapper
ProcessChantierUseCase --> IConstructeurProblemeOrTools
ProcessChantierUseCase --> ISolutionInterpreterService
ProcessChantierUseCase ..> Chantier : "<<manipule>>"

ChantierSetupInputMapper --|> IChantierSetupInputMapper
ChantierSetupInputMapper --> ICalendrierService

ChantierSetupInputDtoValidator --|> FluentVal.AbstractValidator

ConstructeurProblemeOrTools --|> IConstructeurProblemeOrTools
ConstructeurProblemeOrTools ..> TacheModelBuilder : "<<délègue à>>"
ConstructeurProblemeOrTools ..> CoutModelBuilder : "<<délègue à>>"
TacheModelBuilder ..> OrTools.CpModel : "<<construit pour>>"
CoutModelBuilder ..> OrTools.CpModel : "<<construit pour>>"

SolutionInterpreterService --|> ISolutionInterpreterService
SolutionInterpreterService ..> OrTools.CpSolver : "<<lit depuis>>"

CalendrierService --|> ICalendrierService

' Toutes les couches peuvent dépendre du Domaine
Application ..> Domain
Infrastructure ..> Domain

@enduml